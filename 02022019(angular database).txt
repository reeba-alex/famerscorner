Q).  create a database program to insert data into database?
 
1. Design an html page to perform routing

helloworld.component.html



 <nav class="navbar navbar-expand-lg navbar-light bg-light">
  <!-- <a class="navbar-brand" href="#">Navbar</a> -->
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>

  <div class="collapse navbar-collapse" id="navbarSupportedContent">
    <ul class="navbar-nav mr-auto">
      <li class="nav-item active">
        <a class="nav-link" routerlink="home">Home <span class="sr-only">(current)</span></a>
      </li>
      <li class="nav-item">
        <a class="nav-link" routerLink="about">Link</a>
      </li>
      <li class="nav-item dropdown">
        <!-- <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> 
          Dropdown
        </a>-->
        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
          <a class="dropdown-item" href="#">Action</a>
          <a class="dropdown-item" href="#">Another action</a>
          <div class="dropdown-divider"></div>
          <a class="dropdown-item" href="#">Something else here</a>
        </div>
      </li>
      <li class="nav-item">
        <a class="nav-link disabled" routerLink="contact" tabindex="-1" aria-disabled="true">Disabled</a>
      </li>
    </ul>
    <form class="form-inline my-2 my-lg-0">
      <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
      <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
    </form>
  </div>
</nav>

2. import routing component into app-routing.module.ts
######################################################

import { NgModule } from '@angular/core';
import { Routes, RouterModule } from '@angular/router';
import { Profile } from 'selenium-webdriver/firefox';
import { ProfileComponent } from './profile/profile.component';
import { HeaderComponent } from './header/header.component';
import { DateComponent } from './date/date.component';

const routes: Routes = [{path:'home',component:ProfileComponent},
{path:'about',component:HeaderComponent},
{path:'contact',component:DateComponent}];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class AppRoutingModule { }

3. create services perform services : ng g s servicename
########################################################
4. create a registration form
#############################
   a) design    header.component.html
<div>
<form #f="ngForm" name="regForm" (submit)="registration(f)">
  <table>
<tr><td>USERNAME :</td> <td><input type="text" id="name1" name="na1" [(ngModel)]="student.uname"></td></tr>
 <tr><td>PASSWORD :</td><td><input type="password" id="name2" name="na2" [(ngModel)]="student.psw"></td></tr>  
 <tr><td><input type="submit" name="submit" ></td></tr>

  </table></form></div>
    
       b)background code for performing registration          header.component.ts

import { Component, OnInit } from '@angular/core';
import {Student} from '../student';
import {NgForm} from '@angular/forms';
import { Servicess1Service } from '../servicess1.service';
@Component({
  selector: 'app-header',
  templateUrl: './header.component.html',
  styleUrls: ['./header.component.css']
})
export class HeaderComponent implements OnInit {
 student =new Student();
 isregistered=false;
  constructor(private applyservice:Servicess1Service) { }

  ngOnInit() {

  }
  registration(f:NgForm){
this.applyservice.store(this.student).subscribe(data=>{
  this.isregistered=true;
  console.log("registered successfully");
  f.reset();
},

(err) => {
  
  this.isregistered=false;
});

  }

}

      c)create main class student.ts
export class Student
{
id?:Number;
uname:String;
psw:String;
status:Number;
    constructor(){
        
        this.uname="";
        this.psw="";
        


    }
}
       d) write service   service.ts
import { Injectable } from '@angular/core';
import {HttpClient,HttpErrorResponse} from '@angular/common/http';
import {Student} from './student';
import { store } from '@angular/core/src/render3';
import { observable, Observable, throwError } from 'rxjs';
import { CATCH_ERROR_VAR } from '@angular/compiler/src/output/output_ast';
import {map,catchError} from 'rxjs/operators';
@Injectable({
  providedIn: 'root'
})
export class Servicess1Service {
  student:Student[];

  constructor(private http:HttpClient) {}

  store(student: Student):Observable<Student[]>{
  return this.http.post(`http://localhost/reg.php`,{ data: student}).pipe(map((res)=>{
    this.student=(res['data']);
    return this.student;
  }),
  catchError(this.handleError));

  }
  private handleError(error:HttpErrorResponse){
    console.log(error);
    return throwError("something went to wrong");
  }
}


       e)register using components,services  app.module.ts
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';

import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { HeaderComponent } from './header/header.component';
import { DateComponent } from './date/date.component';
import { HelloworldComponent } from './helloworld/helloworld.component';
import { ProfileComponent } from './profile/profile.component';
import {Servicess1Service} from './servicess1.service';
import { FormsModule } from '@angular/forms';
import { HttpClientModule } from '@angular/common/http';

@NgModule({
  declarations: [
    AppComponent,
    HeaderComponent,
    DateComponent,
    HelloworldComponent,
    ProfileComponent
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    FormsModule,
    HttpClientModule
  ],
  providers: [Servicess1Service],
  bootstrap: [AppComponent]
})
export class AppModule { }

       
           f) server connection reg.php
<?php
$con=mysqli_connect("localhost","root","");
mysqli_select_db($con,"angulardb");
header("Access-Control-Allow-Origin:*);
header("Access-Control-Allow-Metods:PUT, GET, POST);
header("Access-Control-Allow-Headers:Origin,X-Requested-With,Content-Type,Accept");
$postdata=file_get_contents("php://input");
$uname;
$pass;
$request=json_decode($postdata);
$uname=mysqli_real_escape_string($con,trim($request->data->uname));
$pass=mysqli_real_escape_string($con,trim($request->data->psw));
$sql="insert into reg (`uname`,`pwd`,`status`)values('$uname','$pass',1)";
	if(mysqli_query($con,$sql))
	{
		$student=[
		'uname'=>$uname,
		'pwd'=>$pass,
		'id'=>mysqli_insert_id($con)];
		echo json_encode(['data'==>$student]);
		
	}
	
	
?>


